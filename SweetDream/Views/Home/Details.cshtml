@model SweetDream.Models.Product
@{
    ViewData["Title"] = "Product Details";
}
<style>
    .single_product_area {
        padding: 60px 0;
        background-color: #fafafa;
    }

    .s_product_img img {
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    }

    .s_product_text h3 {
        font-size: 28px;
        font-weight: 600;
        margin-bottom: 15px;
        color: #333;
    }

    .s_product_text h2 {
        font-size: 26px;
        margin-bottom: 25px;
    }

    .s_product_text ul.list {
        list-style: none;
        padding: 0;
        margin-bottom: 25px;
    }

        .s_product_text ul.list li {
            margin-bottom: 10px;
            font-size: 16px;
            color: #444;
        }

            .s_product_text ul.list li span {
                font-weight: 600;
                color: #222;
                margin-right: 5px;
            }

    .product_count_area {
        margin-bottom: 20px;
    }

    .product_count {
        display: flex;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 6px;
        overflow: hidden;
        width: fit-content;
    }

    .product_count_item {
        padding: 10px 15px;
        cursor: pointer;
        font-size: 18px;
        background-color: #fff;
        border-right: 1px solid #ddd;
    }

    .product_count input {
        border: none;
        width: 60px;
        text-align: center;
        font-size: 16px;
        outline: none;
    }

    .btn_3 {
        background-color: #ff8b3d;
        color: white;
        border: none;
        padding: 10px 25px;
        font-size: 16px;
        border-radius: 6px;
        transition: background 0.3s ease;
        margin-right: 10px;
    }

        .btn_3:hover {
            background-color: #ff6a00;
            color: white;
            text-decoration: none;
        }

    .s_product_text p {
        font-size: 15px;
        line-height: 1.7;
        color: #555;
        margin-top: 20px;



    }

    .button-group {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
    }

        .button-group .btn_3 {
            flex: 1 1 auto;
            min-width: 150px;
            text-align: center;
        }

    .quantity-label {
        font-weight: 600;
        color: #333;
        white-space: nowrap;
    }

    .quantity-control {
        display: flex;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        background-color: #fff;
        box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    }

    .qty-btn {
        background-color: #f2f2f2;
        border: none;
        padding: 10px 16px;
        font-size: 20px;
        font-weight: bold;
        color: #333;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .qty-btn:hover {
            background-color: #e0e0e0;
        }

    .qty-input {
        width: 60px;
        height: 42px;
        text-align: center;
        border: none;
        font-size: 16px;
        outline: none;
    }

</style>
<!-- breadcrumb part start-->
<section class="breadcrumb_part">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb_iner">
                    <h2>Chi tiết sản phẩm</h2>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- breadcrumb part end-->
<!--================Single Product Area =================-->
<section class="single_product_area section_padding">
    <div class="container">
        <div class="row s_product_inner justify-content-between">

            <!-- Image Column -->
            <div class="col-lg-6">
                <div class="s_product_img">
                    <img class="img-fluid" src="~/img/product/@Model.Image" alt="@Model.ProductName"
                         style="width:100%; object-fit:cover; max-height:500px;" />
                </div>
            </div>

            <!-- Details Column -->
            <div class="col-lg-5">
                <div class="s_product_text">
                    <h3>@Model.ProductName</h3>
                    <h2 class="text-danger">
                        @Model.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                    </h2>
                    <ul class="list">
                        <li><span>Danh mục</span>: <a asp-controller="Categories" asp-action="Details" asp-route-id="@Model.CategoryId">@ViewBag.CategoryName</a></li>
                        <li><span>Thương hiệu</span>: <a asp-controller="Brands" asp-action="Details" asp-route-id="@Model.BrandId">@ViewBag.BrandName</a></li>
                        <li><span>Kích thước</span>: @Model.Size</li>
                        <li><span>Chất liệu sử dụng</span>: @Model.Material</li>
                        <li><span>Giảm giá</span>: @(Model.Discount.HasValue ? Model.Discount + "%" : "No Discount")</li>
                        <li><span>Số lượng sản phẩm</span>: @Model.Quantity</li>
                    </ul>


                    <!-- Add to cart area -->
                    <div class="card_area">
                        <form method="post" action="@Url.Action("AddToCart", "ShoppingCart")" class="contact_form">
                            <input type="hidden" name="productId" value="@Model.ProductId" />
                            <input type="hidden" name="redirectToCart" value="true" />

                            <div class="product_count_area ">
                                <label>Số lượng mua: </label>
                                <div class="quantity-control">
                                    <button type="button" class="qty-btn qty-minus">−</button>
                                    <input type="number" name="quantity" class="qty-input" value="1" min="1" max="@Model.Quantity" />
                                    <button type="button" class="qty-btn qty-plus">+</button>
                                </div>
                            </div>


                            <div class="button-group mt-4 d-flex gap-3 flex-wrap">
                                <!-- Nút Mua luôn -->
                                <button type="submit" class="btn_3">Mua luôn</button>

                                <!-- Nút Thêm vào giỏ hàng -->
                                <button type="submit" class="btn_3" formaction="@Url.Action("AddToCart", "ShoppingCart")" formmethod="post">Thêm vào giỏ hàng</button>

                                <!-- Nút Trở về -->
                                <a asp-controller="Home" asp-action="Product" class="btn_3">Trở về</a>
                            </div>

                        </form>
                    </div>
                   
                </div>
            </div>

        </div>
        <hr />
        <h4 class="mt-4">Mô tả sản phẩm</h4>
        <p>@Html.Raw(Model.Description)</p>

    </div>

</section>

<!--================ Feedback Section =================-->
<section class="product_description_area section_padding">
    <div class="container">
        <h3 class="mb-4">Customer Feedback</h3>
        <div class="text-center mb-4">
            <span class="fw-bold">Average Rating:</span>
            @if (ViewBag.TotalReviews > 0)
            {
                <span class="text-warning rating-stars">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= Math.Round((double)ViewBag.AverageRating))
                        {
                            <i class="fas fa-star"></i>
                        }
                        else
                        {
                            <i class="far fa-star"></i>
                        }
                    }
                </span>
                <span class="text-muted">(@ViewBag.TotalReviews reviews)</span>
            }
            else
            {
                <span class="text-muted">No ratings yet</span>
            }
        </div>

        @if (ViewBag.Feedbacks != null && ViewBag.Feedbacks.Count > 0)
        {
            <div class="feedback-container">
                @foreach (var feedback in ViewBag.Feedbacks)
                {
                    var userImage = !string.IsNullOrEmpty(feedback.Account?.AccountImage)
                    ? $"/img/{feedback.Account.AccountImage}"
                    : "~/wwwroot/img/3.png";
                    <div class="feedback-item border p-3 rounded mb-3">
                        <div class="d-flex align-items-center mb-2">
                            <img src="@userImage" alt="Avatar" class="rounded-circle me-3" style="width:50px; height:50px;" />
                            <div>
                                <h6 class="mb-0">@feedback.Account?.UserName</h6>
                                <small class="text-muted">@feedback.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                            </div>
                        </div>
                        <p class="mb-1">@feedback.Content</p>
                        <div>
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= feedback.Rating)
                                {
                                    <i class="fas fa-star text-warning"></i>
                                }
                                else
                                {
                                    <i class="far fa-star text-muted"></i>
                                }
                            }
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-muted text-center">No feedback available for this product.</p>
        }
    </div>
</section>

<!-- Custom CSS -->
<link rel="stylesheet" href="~/css/product-details.css" asp-append-version="true" />
<script>
    document.querySelector('.qty-minus').addEventListener('click', function () {
        const input = document.querySelector('.qty-input');
        let value = parseInt(input.value);
        if (value > 1) input.value = value - 1;
    });

    document.querySelector('.qty-plus').addEventListener('click', function () {
        const input = document.querySelector('.qty-input');
        let value = parseInt(input.value);
        const max = parseInt(input.max);
        if (value < max) input.value = value + 1;
    });
</script>

<!-- Quantity increment/decrement script -->
@* <script>
    document.addEventListener("DOMContentLoaded", function () {
        const decrementBtn = document.querySelector(".inumber-decrement");
        const incrementBtn = document.querySelector(".number-increment");
        const quantityInput = document.querySelector(".input-number");

        decrementBtn.addEventListener("click", () => {
            let val = parseInt(quantityInput.value) || 1;
            if (val > 1) quantityInput.value = val - 1;
        });

        incrementBtn.addEventListener("click", () => {
            let val = parseInt(quantityInput.value) || 1;
            let max = parseInt(quantityInput.getAttribute("max")) || 999;
            if (val < max) quantityInput.value = val + 1;
        });
    });
</script> *@
