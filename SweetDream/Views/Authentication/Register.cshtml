@model SweetDream.Models.Account
@{
    ViewData["Title"] = "Register Account";
}

<style>
    .register-container {
        max-width: 750px;
        margin: 60px auto;
        padding: 30px 35px;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
    }

        .register-container h2 {
            text-align: center;
            margin-bottom: 12px;
            font-weight: 700;
            color: #333;
        }

        .register-container .subtitle {
            text-align: center;
            font-size: 0.95rem;
            color: #666;
            margin-bottom: 30px;
        }

    .form-group label {
        font-weight: 600;
        margin-bottom: 5px;
        color: #444;
    }

    .form-control {
        border-radius: 8px;
        border: 1.5px solid #ccc;
        transition: border-color 0.3s;
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 6px rgba(0, 123, 255, 0.2);
        }

    .text-danger {
        font-size: 0.85rem;
        margin-top: 4px;
    }

    .btn-primary {
        width: 100%;
        padding: 12px;
        font-weight: bold;
        border-radius: 8px;
    }

    .password-hint {
        font-size: 0.75rem;
        color: #888;
        margin-top: 4px;
        padding-left: 2px;
    }

    .cancel-link {
        display: block;
        text-align: center;
        margin-top: 16px;
        color: #555;
        text-decoration: none;
    }

        .cancel-link:hover {
            color: #007bff;
        }
</style>

<div class="container">
    <div class="register-container">
        <form asp-action="Register" method="post" novalidate>
            <h2>Đăng ký tài khoản</h2>
            <p class="subtitle">Điền thông tin bên dưới để tạo tài khoản của bạn.</p>

            @if (ViewData["Message"] != null)
            {
                <div class="text-danger text-center mb-3">@ViewData["Message"]</div>
            }

            <div class="row">
                <div class="col-md-6 form-group mb-3">
                    <label asp-for="UserName"></label>
                    <input asp-for="UserName" class="form-control" placeholder="Tên đăng nhập" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                <div class="col-md-6 form-group mb-3">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="form-control" placeholder="you@email.com" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 form-group mb-3">
                    <label asp-for="FirstName">Tên đệm</label>
                    <input asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
                <div class="col-md-6 form-group mb-3">
                    <label asp-for="LastName">Họ</label>
                    <input asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 form-group mb-3">
                    <label asp-for="PhoneNumber">Số điện thoại</label>
                    <input asp-for="PhoneNumber" class="form-control" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
                <div class="col-md-6 form-group mb-3">
                    <label asp-for="DateOfBirth">Ngày sinh</label>
                    <input asp-for="DateOfBirth" type="date" class="form-control" />
                    <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Address">Địa chỉ</label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6 form-group mb-3">
                    <label asp-for="PasswordHash">Mật khẩu</label>
                    <input asp-for="PasswordHash" type="password" class="form-control" placeholder="Mật khẩu mạnh" />
                    <div class="password-hint">Bắt đầu bằng chữ in hoa, ≥ 8 ký tự, chứa số và kết thúc ký tự đặc biệt.</div>
                    <span asp-validation-for="PasswordHash" class="text-danger"></span>
                </div>
                <div class="col-md-6 form-group mb-3">
                    <label>Xác nhận mật khẩu</label>
                    <input type="password" name="ConfirmPassword" class="form-control" placeholder="Nhập lại mật khẩu" />
                    <span class="text-danger">@ViewData["ConfirmPasswordError"]</span>
                </div>
            </div>

            <input type="hidden" name="roleName" value="CUSTOMER" />
            <button type="submit" class="btn btn-primary">Đăng ký</button>

            <a asp-action="Login" class="cancel-link">Hủy và quay lại đăng nhập</a>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector("form");
            const passwordInput = form.querySelector("input[name='PasswordHash']");
            const confirmPasswordInput = form.querySelector("input[name='ConfirmPassword']");

            let passwordError = document.createElement("span");
            passwordError.className = "text-danger password-error";
            passwordInput.insertAdjacentElement('afterend', passwordError);

            let confirmError = document.createElement("span");
            confirmError.className = "text-danger confirm-error";
            confirmPasswordInput.insertAdjacentElement('afterend', confirmError);

            form.addEventListener("submit", function (e) {
                passwordError.textContent = "";
                confirmError.textContent = "";

                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                const passwordRegex = /^[A-Z](?=.*\d)(?=.*[\W_]).{6,}[\W_]$/;

                let valid = true;

                if (!passwordRegex.test(password)) {
                    passwordError.textContent = "Mật khẩu phải bắt đầu bằng chữ in hoa, ≥ 8 ký tự, chứa số và kết thúc bằng ký tự đặc biệt.";
                    valid = false;
                }

                if (password !== confirmPassword) {
                    confirmError.textContent = "Mật khẩu xác nhận không khớp.";
                    valid = false;
                }

                if (!valid) {
                    e.preventDefault();
                }
            });
        });
    </script>
}
